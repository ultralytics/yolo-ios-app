# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

name: Publish iOS App

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to publish (copied to testflight)'
        required: true
        default: 'main'
        type: string
      new_version:
        description: 'Version (e.g., 8.6.0) â€“ leave empty to auto-increment'
        required: false
        type: string
      deploy_testflight:
        description: 'Deploy to TestFlight'
        required: true
        default: false
        type: boolean
      deploy_appstore:
        description: 'Submit to App Store'
        required: true
        default: false
        type: boolean
      force_push:
        description: 'Force update (if no changes)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write   # Push to testflight branch

jobs:
  Publish:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          xcodebuild -version

      - name: Prepare testflight branch (reset to source branch)
        run: |
          git config user.name "UltralyticsAssistant"
          git config user.email "web@ultralytics.com"
          git fetch origin
          git checkout -B testflight origin/${{ inputs.source_branch }}

      - name: Update version and build number
        run: |
          INFO_PLIST="YOLOiOSApp/YOLOiOSApp/Info.plist"
          PROJECT_PLIST="YOLOiOSApp/YOLOiOSApp.xcodeproj/project.pbxproj"

          CURRENT_BUILD=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "$INFO_PLIST")
          CURRENT_MARKETING=$(grep "MARKETING_VERSION = " "$PROJECT_PLIST" | head -1 |
                              sed 's/.*MARKETING_VERSION = \([^;]*\);.*/\1/')

          if [[ -n "${{ inputs.new_version }}" ]]; then
            NEW_MARKETING="${{ inputs.new_version }}"
            echo "Using specified version: $NEW_MARKETING"
          else
            IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_MARKETING"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            NEW_PATCH=$((PATCH + 1))
            NEW_MARKETING="$MAJOR.$MINOR.$NEW_PATCH"
            echo "Auto-incrementing version: $CURRENT_MARKETING â†’ $NEW_MARKETING"
          fi

          NEW_BUILD=$((CURRENT_BUILD + 1))

          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD" "$INFO_PLIST"
          sed -i '' "s/MARKETING_VERSION = $CURRENT_MARKETING;/MARKETING_VERSION = $NEW_MARKETING;/g" "$PROJECT_PLIST"

          echo "Updated to v$NEW_MARKETING ($NEW_BUILD)"
          git add "$INFO_PLIST" "$PROJECT_PLIST"
          git commit -m "Push v$NEW_MARKETING ($NEW_BUILD) for TestFlight"

      - name: Resolve Package Dependencies and Commit
        run: |
          cd YOLOiOSApp
          xcodebuild -resolvePackageDependencies -project YOLOiOSApp.xcodeproj -scheme YOLOiOSApp
          cd ..
          git add -f YOLOiOSApp/YOLOiOSApp.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
          git commit -m "Update Package.resolved for TestFlight build" || echo "No Package.resolved changes"

      - name: Force commit if requested
        if: inputs.force_push
        run: |
          echo "Force push requested â€“ creating empty commit to trigger TestFlight build"
          git commit --allow-empty -m "Force TestFlight build (triggered manually)"

      - name: Push to TestFlight
        if: inputs.deploy_testflight && github.repository == 'ultralytics/yolo-ios-app' && (github.actor == 'glenn-jocher' || github.actor == 'asabri97' || github.actor == 'john-rocky')
        run: |
          git push origin HEAD:testflight --force-with-lease

      - name: Push to App Store
        if: inputs.deploy_appstore && github.repository == 'ultralytics/yolo-ios-app' && (github.actor == 'glenn-jocher' || github.actor == 'asabri97' || github.actor == 'john-rocky')
        run: |
          git push origin HEAD:appstore --force-with-lease

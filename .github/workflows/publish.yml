# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# This workflow publishes the YOLO iOS app to TestFlight and/or submits to App Store

name: Publish iOS App

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to publish'
        required: true
        default: 'main'
        type: string

permissions:
  contents: write # Push to testflight branch

jobs:
  Publish:
    if: github.repository == 'ultralytics/yolo-ios-app' && (github.actor == 'glenn-jocher' || github.actor == 'asabri97' || github.actor == 'john-rocky')
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          xcodebuild -version

      - name: Prepare testflight branch (reset to source branch)
        run: |
          git config user.name "UltralyticsAssistant"
          git config user.email "web@ultralytics.com"
          git fetch origin
          git checkout -B testflight origin/${{ inputs.source_branch }}

      - name: Resolve dependencies and commit changes
        run: |
          INFO_PLIST="YOLOiOSApp/YOLOiOSApp/Info.plist"
          PROJECT_PLIST="YOLOiOSApp/YOLOiOSApp.xcodeproj/project.pbxproj"

          CURRENT_BUILD=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "$INFO_PLIST")
          CURRENT_MARKETING=$(grep "MARKETING_VERSION = " "$PROJECT_PLIST" | head -1 |
                              sed 's/.*MARKETING_VERSION = \([^;]*\);.*/\1/')

          # Resolve package dependencies
          cd YOLOiOSApp
          xcodebuild -resolvePackageDependencies -project YOLOiOSApp.xcodeproj -scheme YOLOiOSApp
          cd ..

          # Commit resolved dependencies
          git add -f YOLOiOSApp/YOLOiOSApp.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
          git commit --allow-empty -m "Prepare v$CURRENT_MARKETING ($CURRENT_BUILD) for Xcode Cloud"

      - name: Push to Xcode Cloud
        run: |
          git push origin testflight

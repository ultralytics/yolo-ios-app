# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license
# Continuous Integration (CI) GitHub Actions tests
name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read
jobs:
  test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Xcode
        uses: apple-actions/setup-xcode@v2
        with:
          xcode-version: "15.2"
      - name: Download and unzip YOLO model
        run: |
          MODEL="yolo11n.mlpackage"
          mkdir -p YOLOiOSApp/DetectModels
          curl -L "https://github.com/ultralytics/yolo-ios-app/releases/download/v8.3.0/${MODEL}.zip" -o "${MODEL}.zip"
          unzip "${MODEL}.zip" -d YOLOiOSApp/DetectModels
      - name: Install dependencies
        run: |
          xcodebuild -resolvePackageDependencies
      - name: Create test .env file
        run: |
          echo "# Test environment variables" > .env
          echo "API_URL=https://test-api.ultralytics.com" >> .env
          echo "FIREBASE_API_KEY=test-key" >> .env
      - name: Run tests with coverage
        run: |
          xcodebuild test \
            -scheme YOLO \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0' \
            -enableCodeCoverage YES \
            -derivedDataPath build \
            -quiet
      - name: Generate coverage report
        run: |
          xcrun xccov view --report build/Logs/Test/*.xcresult
      - name: Upload Coverage Reports to CodeCov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          name: swift-codecov
          verbose: false
          xcode: true
          xcode_package: build/Logs/Test/*.xcresult
